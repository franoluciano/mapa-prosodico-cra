[{"C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\index.js":"1","C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\app.js":"2","C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\layout.js":"3","C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\bienvenida.js":"4","C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\mapa.js":"5","C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\final.js":"6","C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\container.js":"7","C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\menu.js":"8"},{"size":175,"mtime":1621524569023,"results":"9","hashOfConfig":"10"},{"size":455,"mtime":1621620905755,"results":"11","hashOfConfig":"10"},{"size":367,"mtime":1621531322109,"results":"12","hashOfConfig":"10"},{"size":2330,"mtime":1621618232030,"results":"13","hashOfConfig":"10"},{"size":5542,"mtime":1621647127797,"results":"14","hashOfConfig":"10"},{"size":3172,"mtime":1621618255153,"results":"15","hashOfConfig":"10"},{"size":387,"mtime":1621647519514,"results":"16","hashOfConfig":"10"},{"size":2094,"mtime":1621648046974,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8lflkk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\index.js",[],["36","37"],"C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\app.js",[],"C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\layout.js",[],"C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\bienvenida.js",[],"C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\mapa.js",["38","39","40"],"import { useEffect, useState } from \"react\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { Link } from \"react-scroll\";\r\nimport Container from \"./container\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Polygon,\r\n  Marker,\r\n  useMap,\r\n  ImageOverlay,\r\n} from \"react-leaflet\";\r\nimport zones from \"./geojson/zones.json\";\r\nimport Menu from \"./menu\";\r\n\r\nconst styles = [\r\n  { color: \"#dc322f\", opacity: 1, weight: 1 },\r\n  { color: \"#cb4b16\", opacity: 1, weight: 1 },\r\n  { color: \"#b58900\", opacity: 1, weight: 1 },\r\n  { color: \"#859900\", opacity: 1, weight: 1 },\r\n  { color: \"#b58900\", opacity: 1, weight: 1 },\r\n  { color: \"#859900\", opacity: 1, weight: 1 },\r\n  { color: \"#b58900\", opacity: 1, weight: 1 },\r\n  { color: \"#6c71c4\", opacity: 1, weight: 1 },\r\n  { color: \"#268bd2\", opacity: 1, weight: 1 },\r\n];\r\n\r\nconst Mapa = () => {\r\n  const [activePath, setActivePath] = useState(null);\r\n  const [activeZone, setActiveZone] = useState(null);\r\n  const [zoneDetails, setZoneDetails] = useState(null);\r\n  const [filteredPoints, setFilteredPoints] = useState([]);\r\n  const [select1, setSelect1] = useState({\r\n    value: \"phrase\",\r\n    label: \"Frases leÃ­das\",\r\n  });\r\n  const [select2, setSelect2] = useState({ value: \"urban\", label: \"Urbano\" });\r\n  const [select3, setSelect3] = useState({ value: \"male\", label: \"Mujer\" });\r\n  const [center, setCenter] = useState([-36.95574, -70.04883]);\r\n  const [zoom, setZoom] = useState(4);\r\n\r\n  useEffect(() => {\r\n    if (activeZone) {\r\n      const { index } = activeZone.properties;\r\n      const details = require(`./geojson/zone${index}`);\r\n      setZoneDetails(details.features);\r\n    }\r\n  }, [activeZone]);\r\n\r\n  useEffect(() => {\r\n    if (zoneDetails && select1 && select2 && select3) {\r\n      setFilteredPoints(\r\n        zoneDetails.filter(\r\n          ({ properties }) =>\r\n            properties.task === select1.value &&\r\n            properties.area === select2.value &&\r\n            properties.gender === select3.value\r\n        )\r\n      );\r\n    }\r\n  }, [zoneDetails, select1, select2, select3]);\r\n\r\n  useEffect(() => {\r\n    if (filteredPoints.length > 0) {\r\n      const firstPoint = filteredPoints[0];\r\n      const { coordinates } = firstPoint.geometry;\r\n      const newCenter = [coordinates[1], coordinates[0]];\r\n      setCenter(newCenter);\r\n      setZoom(6);\r\n      console.log(\"new center\", newCenter);\r\n    }\r\n  }, [filteredPoints]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1 style={{ fontSize: 50 }}>Mapa</h1>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div id=\"mapa\">\r\n          <MapContainer\r\n            center={center}\r\n            zoom={zoom}\r\n            style={{ height: \"80vh\", width: \"40vw\" }}\r\n          >\r\n            <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\r\n            {activeZone\r\n              ? filteredPoints &&\r\n                filteredPoints.map((d, index) => {\r\n                  const positions = activeZone.geometry.coordinates.map((a) =>\r\n                    a.map((b) => b.map((c) => [c[1], c[0]]))\r\n                  );\r\n                  return (\r\n                    <>\r\n                      <Marker\r\n                        // icon={icon}\r\n                        key={index}\r\n                        position={[\r\n                          d.geometry.coordinates[1],\r\n                          d.geometry.coordinates[0],\r\n                        ]}\r\n                      />\r\n                      <Polygon\r\n                        pathOptions={styles[index]}\r\n                        key={activeZone.properties.name}\r\n                        positions={positions}\r\n                      />\r\n                    </>\r\n                  );\r\n                })\r\n              : zones.features.map((zone, index) => {\r\n                  const positions = zone.geometry.coordinates.map((a) =>\r\n                    a.map((b) => b.map((c) => [c[1], c[0]]))\r\n                  );\r\n\r\n                  return (\r\n                    <Polygon\r\n                      pathOptions={styles[index]}\r\n                      key={zone.properties.name}\r\n                      positions={positions}\r\n                    />\r\n                  );\r\n                })}\r\n            {/* <Marker position={center}></Marker> */}\r\n            <NewCenter newCenter={center} activeZone={activeZone} />\r\n          </MapContainer>\r\n        </div>\r\n        <Menu\r\n          point={filteredPoints[0]}\r\n          activeZone={activeZone}\r\n          setActiveZone={setActiveZone}\r\n          select1={select1}\r\n          setSelect1={setSelect1}\r\n          select2={select2}\r\n          setSelect2={setSelect2}\r\n          select3={select3}\r\n          setSelect3={setSelect3}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Link to=\"inicio\" spy={true} smooth={true}>\r\n          <AwesomeButton style={{ marginTop: 20 }} type=\"primary\">\r\n            Inicio\r\n          </AwesomeButton>\r\n        </Link>\r\n        <Link to=\"final\" spy={true} smooth={true}>\r\n          <AwesomeButton style={{ marginTop: 20 }} type=\"primary\">\r\n            Contacto\r\n          </AwesomeButton>\r\n        </Link>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst NewCenter = ({ newCenter, activeZone }) => {\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    if (activeZone) {\r\n      map.flyTo(newCenter, 6);\r\n    }\r\n  }, [map, activeZone, newCenter]);\r\n  console.log(\"map center:\", map.getCenter());\r\n  return null;\r\n};\r\n\r\nexport default Mapa;\r\n","C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\final.js",[],"C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\container.js",[],"C:\\Users\\lucia\\Desktop\\mapa-prosodico-cra\\src\\menu.js",["41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":11,"column":3,"nodeType":"48","messageId":"49","endLine":11,"endColumn":15},{"ruleId":"46","severity":1,"message":"50","line":29,"column":10,"nodeType":"48","messageId":"49","endLine":29,"endColumn":20},{"ruleId":"46","severity":1,"message":"51","line":29,"column":22,"nodeType":"48","messageId":"49","endLine":29,"endColumn":35},{"ruleId":"52","severity":1,"message":"53","line":62,"column":11,"nodeType":"54","endLine":66,"endColumn":13},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'ImageOverlay' is defined but never used.","Identifier","unusedVar","'activePath' is assigned a value but never used.","'setActivePath' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]